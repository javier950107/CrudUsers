@using CRUDUsers.Models.ViewModels
@model VideogameViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Videogames</h1>
<hr />

<div class="row">
    <div class="col-sm-4">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <form asp-action="Create">
            <div class="form-group">
                <label asp-for="NewVideogame.name"></label>
                <input asp-for="NewVideogame.name" class="form-control" />
                <span asp-validation-for="NewVideogame.name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NewVideogame.description"></label>
                <textarea asp-for="NewVideogame.description" class="form-control"></textarea>
                <span asp-validation-for="NewVideogame.description" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input class="btn btn-primary" type="submit" value="Create" />
            </div>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Description</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var data in Model.Videogames)
        {
            <tr>
                <td>
                    @Html.DisplayFor(item => data.id)
                </td>
                <td>
                    @Html.DisplayFor(item => data.name)
                </td>
                <td>
                    @Html.DisplayFor(item => data.description)
                </td>
                <td>
                    <form asp-action="Delete" asp-route-id="@data.id" >
                        <button class="btn btn-danger" type="submit" >X</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

